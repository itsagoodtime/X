do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u)local u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=128,71,26,91,15,70,61,31,55,14,80,90,63,61,65,48,36,95,73,39,12,47,60,63,64,64,98,59,66,61,44,89,90,20,69,71,49,90,66,20,84,91,15,31,63,88,40,49,54,24 while u~=82 do if v>=832 then if v<=1128 then if v<=942 then if v<=850 then if v<845 then do ce=''end v=850 else do ca=(2^52)end v=873 end else if v<=873 then v=896 bp={[0]=1}else if v<937 then y=2 v=942 else v=975 do for cj=1,s do bp[cj]=y do y=(y*2)end end end end end end else if v<=1049 then if v<=975 then do bb=function(s,cj,ck,cl,cl)local cl,cm,cn=67,55,80,67,39,83,66,23,70,56,74,34,99,15,11 while cl~=30 do if cm>=119 then if cm>=138 then if cm>140 then break else cm=160 return cn end else cn=(cn-cn%1)cm=138 end else if cm<=55 then cm=79 cn=nil else if cm<101 then cm=103 cn=nil else cn=((cj/bp[s])%bp[ck])cm=119 end end end end end end v=1015 else if v>1021 then v=1066 bw=function(s,cj,ck,cl,cl,cl)local cl cl=((s/2^(cj-1))%2^((ck-1)-(cj-1)+1))return(cl-cl%1);end else bv=(bit_lib and bit_lib.bxor or function(s,cj)s=s%(2^32)cj=cj%(2^h)local h,ck=0,1 while s>0 and cj>0 do local cl,cm=s%16,cj%16 h=h+bn[cl+1][cm+1]*ck s=(s-cl)/16 cj=(cj-cm)/16 ck=ck*l end h=h+s*ck+cj*ck return h end)v=1049 end end else if v<=1066 then bk=a v=1106 else if v<1119 then br=function()local a,h,l,s a,s,h,l=ba(bd,bk,(bk+3))bk=(bk+4);do return((l*16777216)+(h*65536)+(s*256)+a);end end v=1128 else v=1160 bf=function()local a a=ba(bd,bk,bk)bk=(bk+1);return a;end end end end end else if v>=1320 then if v>=1426 then if v<=1426 then v=1472 w=function(a,h,l,s)local s,cj,ck,cl,cm do ck=bc end cl=a[133]cm=a[25]do s=a[151]end cj=a[89]return function(...)local a,ck,cn,co,cp,cq,cr,cs,ct ck=1 cq=-1 cn=-1 ct={}co={...}a=(be('#',...)-1)cp={}cs={}for cn=0,a do if(not(cn<cj))then ct[(cn-cj)]=co[(cn+1)];else cs[cn]=co[(cn+1)];end;end;cr=(a-cj+1)while true do local cn,cr,cu,cv,cw,cx,cy,cz,da,db cz=cl[ck]cr=cz[146]cy=cz[169]do cx=cz[160]end db=cz[95]da=cz[68]cu=cz[36]cv=cz[130]cn=cz[55]cw=cz[45]do if not(cr<45)then if not(cr<68)then if not(cr>78)then if not(cr>72)then if not(cr>69)then if(cz[146]<69)then do do return cs[cx]end end else local cy,dc,dd,de do dc=cx end dd,cy=bt(cs[dc](cc(cs,(dc+1),cz[55])))cq=(cy+dc-1)de=0 for cy=dc,cq do do de=(de+1);end cs[cy]=dd[de];end;end else if not(cr<71)then if(cr>71)then cs[cx]=nil;else local cy,dc cy=cx do dc={}end do if(#cp>0)then for dd=1,#cp do local de de=cp[dd]for dd=0,#de do local df,dg,dh dh=de[dd]dg=dh[1]df=dh[2]do if(dg==cs and df>=0)then dc[df]=dg[df]dh[1]=dc end end end end end end do return cc(cs,cy,cq);end end else cs[cx]();end end else if not(cz[146]>75)then if not(cz[146]<74)then if(cr<75)then cs[cx]=cm[cn]else bc[cx]=cs[db]end else cs[cz[160]]=(cs[cn]+cs[da]);end else if not(cr<77)then do if(cr<78)then do if not cs[cz[68]]then cs[cx]=cs[da];ck=cn;end;end else if((cm[cx]<cs[da]))then do ck=cn;end end;end end else cs[cx]=#cs[cn];end end end else do if not(cz[146]<85)then if not(cz[146]<88)then if not(cr<89)then if(cr>89)then cs[cz[160]]=(cs[cn]%cm[da]);else do cs[cx]=cs[cn][cm[cz[68]]];end end else local cy,dc,dd dc=cz[160]cy=cs[(dc+2)]dd=(cs[dc]+cy)cs[dc]=dd;if((cy>0))then if(not(dd>cs[dc+1]))then ck=cn;cs[(dc+3)]=dd;end elseif(not(dd<cs[dc+1]))then ck=cn;cs[(dc+3)]=dd;end end else if not(cr<86)then do if(cr>86)then cs[cz[cx]]=cs else cs[cx]=-cs[cn];end end else local cy,dc,dd,de cy=cz[160]dc=((da-1)*50)de=cs[cy]dd=cn for df=1,dd do de[(dc+df)]=cs[(cy+df)]end;end end else if not(cr<82)then if not(cr>82)then local cy,dc,dd,de,df do dc=cz[160]end do dd=cz[68]end de=(dc+2)cy={cs[dc](cs[dc+1],cs[de])}for dg=1,dd do do cs[(de+dg)]=cy[dg]end end df=cs[(dc+3)]if df then cs[de]=df else do ck=cn;end end;else if(cr>83)then do if not cs[cx]then do ck=cn;end end;end else cl[ck]=x[cu];do ck=cz[55];end end end else if not(cr>79)then if cs[cz[160]]then do ck=cn;end end;else if(cz[146]<81)then else cs[cx]=cs[cn]end end end end end end else if not(cr<56)then if not(cz[146]<62)then if not(cr<65)then if not(cr>65)then cs[cx]=(cs[cz[55]]/cm[da]);else if(cr>66)then local cy cy=cx cs[cy]=cs[cy](cs[cy+1]);else do return cs[cz[130]][cz[36]]end end end else if not(cr>62)then local cy cy=cx cs[cy]=cs[cy]();else if(cr<64)then do if(not(cs[cz[160]]<cs[da]))then do ck=cn;end end;end else local cy cy=cx cs[cy]=cs[cy](cc(cs,cy+1,cq));end end end else if not(cr>n)then if not(cz[146]>56)then local n,cy cy=cx n=cs[cn]cs[(cy+1)]=n;cs[cy]=n[cm[da]];else if(cr>57)then cs[cw]();else local n n=cx do return cc(cs,n,(n+cn))end;end end else do if not(cr<60)then do if(cz[146]>60)then do cm=bc[cz[160]](cm)end else cs[cx]=cs[cz[55]][cs[da]];end end else cs[cx]=(not cs[cz[55]]);end end end end else do if not(cr>49)then if not(cr>46)then if(cr>45)then bc[cx]()elseif(not(cs[cx]~=cs[da]))then ck=cn;end else if not(cr>47)then local n n={}do while(#cp>0)do for cy=1,#cp do local cy=cp[cy]for dc=0,#cy do local cy=cy[dc]local dc=cy[1]local k=cy[k]if dc==cs and k>=0 then n[k]=dc[k]cy[1]=n end end end break end end return cz[cx];else if 48==cr then cs[cz[160]]=cs[cn];else do ck=((cs[cz[160]]<cs[cz[68]])and cn or ck)end end end end else do if not(cr<53)then if not(cr>53)then cl[ck]={[68]=12,[55]=11,[146]=cr-29,[36]=d,[160]=3};do ck=(ck-1);end else if 54==cr then do if(not(cs[cx]==cs[da]))then do ck=cn;end end;end else if cx then cx=false;da=cn;ck=(ck-1);else ck=(ck+cn+da);end end end else if not(cr>50)then do l[cm[cn]]=cs[cx];end else if(cr>51)then for d=cx,cn do cs[d]=nil;end;else cs[cx]=l[cm[cn]][cm[da]];end end end end end end end end else if not(cr<22)then if not(cz[146]>32)then if not(cr>26)then if not(cr<24)then if not(cr<25)then if(cr>25)then local d,k do d=cz[160]end k=cz[55]for n=d,k do cs[n]=ct[(n-d)];end;else while((cs[cx]<cs[da]))do ck=cn;break end end else cs[cx][cm[cn]]=cm[da];end else if(cr>22)then cs[cx]=bc[db]else cs[cw]=(function()cs[cx]=w(s[db],nil,l);end)end end else if not(cr<30)then if not(cr>30)then cs[cx]=(not(cn==0));ck=(ck+1);else if not(cr~=31)then local d,k,n d=cx do k=cs[d]end n=cs[(d+2)]if((n>0))then if((k>cs[d+1]))then ck=cn;else cs[(d+3)]=k;end elseif((k<cs[d+1]))then ck=cn;else do cs[(d+3)]=k;end end else local d,k do d=cx end k=cs[cn]cs[(d+1)]=k;cs[d]=k[cs[da]];end end else if not(cr>27)then if((cs[cx]>cs[da]))then ck=cn;end;else if not(cr~=28)then ck=cn;else local d,k,n n=cx d={cs[n](cc(cs,n+1,cn))}k=0 for ct=n,da do k=(k+1);cs[ct]=d[k];end end end end end else if not(cr>38)then if not(cr>35)then do if not(cr<34)then if 34==cr then do l=cs[cz[cz[160]]]end else local d do d=cx end cs[d]=cs[d](cc(cs,d+1,cn));end else cs[cz[160]]=h[cn];end end else do if not(cr<37)then if(cr<38)then cs[cx]=bc[db]else if(cm[da]~=cs[cz[160]])then ck=cn;end;end else do cs[cx]=(cs[cn]+cm[da]);end end end end else if not(cr>41)then if not(cz[146]<40)then if(cr<41)then local d do d=cs[cv][cu]end cs[cv][cu]=(d..cs[cz[68]]);else cs[cx]=(cs[cn]^cs[da]);end else cs[cx]=(cs[cn]-cs[da]);end else if not(cr<43)then if not(cr~=43)then else ck=((cm[cz[160]]<cs[da])and cn or ck)end else cs[cw]=(function()cs[cx]=w(s[db],nil,l);end)end end end end else if not(cr<11)then if not(cz[146]>15)then if not(cr>12)then do if(cr<12)then do cs[cx]=w(s[cn],nil,l);end else h[cn]=cs[cx];end end else if not(cz[146]>13)then bc[cx]=bc[db]else if(cr>14)then bc[cx]={}else bc=cs end end end else if not(cr<o)then do if not(cr<20)then if(cr>20)then cs[cx]={};else cs[cx][cs[cn]]=cs[da];end else do cs[cx]=l[cm[cn]];end end end else if not(cr>16)then local d d=cx do return cs[d](cc(cs,(d+1),cz[55]))end;else do if(cr<18)then cl[ck]=x[cu];ck=cz[55];else local d,h d=cn h=cs[d]for k=(d+1),da do do h=(h..cs[k]);end end;cs[cx]=h;end end end end end else if not(cz[146]<5)then if not(cr>7)then if not(cr>5)then do ck=((cs[cx]~=cs[da])and cn or ck)end else if not(cz[146]~=6)then else local d,h d,h=bt(...)for h=1,cz[160]do cs[(h-f)]=d[h]end end end else if not(cr>8)then do cq=cz[cz[160]];end else if 9==cr then do cs[cz[160]]=(cs[cn]/cs[da]);end else cs[cx]=(cs[cn]%cs[da]);end end end else if not(cr>1)then if(cr<i)then do cs[cx]=(cs[cn]*cm[da]);end else do cs={};end do for d=0,a do if(d<cj)then cs[d]=co[(d+1)];else break end;end;end end else if not(cr<3)then if(cr>3)then local a,d do a=cx end do d={}end for f=1,#cp do local h h=cp[f]for f=0,#h do local i,k,l l=h[f]k=l[1]i=l[2]do if(k==cs and i>=a)then d[i]=k[i];l[1]=d;end;end end;end;else cs[cx]=(cs[cn]*cs[da]);end else cs[cz[160]][cm[cn]]=cs[da];end end end end end end end ck=(ck+1);end;end;end else if v>1477 then u=82;else v=1494 return w(ci(bu()),{},bu())();end end else if v>=1367 then if v<1393 then bc={}v=1400 else do bj={}end v=1426 end else ci=function(a,d)local d,f,h,i,k,l,n,o=61,58,80,77,78,66,81,74,76,20,86,79,57,49,17,12,55,63,53,54,76,28,89 while d~=51 do if f<=345 then if f<=181 then if f>=141 then if f<178 then do h={}end f=181 else n={}f=215 end else if f>63 then k={}f=141 else h,i,k,l,n,o=nil f=107 end end else if f<=252 then if f>220 then for s=(#x+1),(#x+i)do local u,cj,ck,cl,cm=74,63,70,74,41,12,63,36,48,47,64,18,51,35,33,62,98,22,70,59,97,64 while u~=52 do if cj>=308 then if cj>=446 then if cj<=481 then if cj>450 then cj=503 do cl[45]=-cl[68]end else cj=481 do cl[130]=-cl[160]end end else if cj>511 then break else cj=532 x[s]=cl;end end else if cj>=389 then if cj>394 then cl[55]=bw(cm,12,33);cj=446 else cl[68]=bw(ck,21,29);cj=420 end else if cj<344 then cl[160]=bw(ck,3,11);cj=348 else cl[95]=bw(ck,12,20);cj=389 end end end else if cj>=175 then if cj<=220 then if cj>181 then cl[36]=bf();cj=267 else cm=br()cj=220 end else if cj<283 then cj=288 cl[127]=bw(ck,1,j);else cj=308 cl[146]=bw(cm,1,11);end end else if cj<=88 then if cj>71 then cj=119 cl={}else cj=88 ck,cl,cm=nil end else if cj<139 then cl[169]=bf();cj=145 else ck=br()cj=175 end end end end end end f=300 else do i=br()end f=252 end else if f<339 then for i=1,br()do local j,s,u,cj,ck,cl=63,62,62,62,94,26,77,63,44,17,99,45,11,49,99,45,64,50,56,68,36,55,93,35,87 while j~=50 do if s>=315 then if s>=415 then if s>=466 then if s<=466 then cl[45]=-cl[68]s=481 else if s<497 then s=506 k[i]=cl;else j=50;end end else if s<426 then do cl[36]=bw(cj,12,20);end s=433 else s=466 cl[130]=-cl[160]end end else if s<=358 then if s<356 then do cl[146]=bw(u,1,11);end s=358 else s=377 cl[160]=bw(cj,3,11);end else if s<387 then cl[55]=bw(u,12,33);s=396 else s=415 cl[68]=bw(cj,21,29);end end end else if s>=186 then if s>=231 then if s<=231 then u=br()s=267 else if s<289 then do ck=bw(cj,1,2)end s=292 else cl[127]=ck s=315 end end else if s<208 then if not(bf()~=1)then do for i=1,bf()do cl[33][i]={bf()==0,br()}end end end s=211 else cj=br()s=231 end end else if s<=87 then if s>66 then do cl={{},nil,nil}end s=131 else s=87 u,cj,ck,cl=nil end else if s>136 then cl[33]={};s=186 else s=168 cl[169]=bf();end end end end end end f=345 else f=370 n[133]=k;end end end else if f<=485 then if f<=406 then if f>373 then n[151]=h;f=455 else for i=1,br()do h[i-1]=ci();end f=406 end else if f>462 then o=br()f=526 else f=485 n[89]=bf();end end else if f>=556 then if f<=556 then f=591 n[25]=l else if f>593 then d=51;else f=619 return n;end end else if f<537 then l={}f=541 else f=556 for d=1,o do local f,h,i,j=71,40,20,30,68,23,47,20,76,14,76,55 while f~=25 do if h<=126 then if h>=78 then if h<120 then h=126 do i=bf()end else j=nil h=166 end else i,j=nil h=78 end else if h>=203 then if h<223 then h=228 do l[d]=j;end else break end else if(not(i~=2))then j=(0~=bf());elseif(not(i~=0))then j=cb();elseif(not(i~=3))then j=by();elseif(4==i)then j=a[by()];end;h=203 end end end end end end end end end end v=1367 end end else if v>=1209 then if v>=1239 then if v>1246 then x={}v=1320 else bt=function(...)return{...},be('#',...)end v=1274 end else do by=function(a,a,a)local a,d,f,h=88,61,81,67,99,46,54,90,12,77,37,88,40 while a~=41 do if d>=122 then if d>=170 then if d>178 then a=41;else d=198 do return h;end end else d=170 bk=(bk+f);end else if d<=61 then d=77 f,h=nil else if d>86 then h=bd:sub(bk,(bk+f-1))d=122 else f=br()d=93 end end end end end end v=1239 end else if v>1165 then cb=function()local a,d,f,h,i,j,k,l=63,47,45,80,21,87,10,36,33,59,53,23,26,61,48,64,63,78 while a~=41 do if d>=203 then if d<=268 then if d>=234 then if d<264 then d=268 do h=(bb(0,k,p)*4294967296+l)end else do i=1 end d=290 end else d=234 j=bb(m,k,11)end else if d>=319 then if d>325 then a=41;else d=360 return(f*(2^(j-1023))*(h/ca+i))end else d=319 if 0==j then if 0~=h then j=1 do i=0 end else do return(f*0)end end elseif not(j==2047)then else if not(h~=0)then do do return(f*(0/0))end end else return(f*(1/0))end end end end else if d>=101 then if d>=139 then if d<151 then d=158 if((l==0 and k==0))then do return 0 end end else d=203 f=((-1)^bb(31,k,1))end else k=br()d=139 end else if d<70 then d=76 f,h,i,j,k,l=nil else do l=br()end d=101 end end end end end v=1209 else v=1176 bm=function()local a,d a,d=ba(bd,bk,(bk+2))bk=(bk+2);return((d*256)+a);end end end end end else if v<=427 then if v>=244 then if v>=330 then if v>=379 then if v>385 then v=468 bq=setmetatable else v=427 bu=(getfenv or function()return _ENV end)end else v=379 bl=math.ldexp end else if v>=277 then if v<288 then do cd=table.concat end v=294 else bg=table.insert v=330 end else v=277 ch=string.rep end end else if v>=168 then if v>=200 then if v>208 then do cg=string.gsub end v=244 else v=227 do bh=string.sub end end else v=200 do bs=string.char end end else if v<112 then w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci=nil v=120 else v=168 ba=string.byte end end end else if v<=618 then if v>=535 then if v<=535 then v=571 z=(function(a,d,d)if'number'==bo(a)then do return true end else return false end end)else if v<611 then bi=math.abs v=618 else v=642 cf=math.floor end end else if v>476 then v=535 bo=type else v=505 be=select end end else if v<=690 then if v>=660 then if v>662 then v=734 do bx={}end else v=690 bz=tonumber end else v=660 cc=(unpack or table.unpack)end else if v<=734 then v=760 for a=0,255 do bx[a]=bs(a);end else if v<806 then v=809 bd=cgfunction(a,d)return bx[bz(a,16)]end)else bn={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,e,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,q,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,t,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,g,6,c,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,b,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,r,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}v=832 end end end end end end end end)(1,0,7,0,12,1,5,32,1,2,2,16,20,58,19,20,12,15,31,14)end
